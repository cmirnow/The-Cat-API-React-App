"use strict";(self.webpackChunkTheCatAPI_React_App=self.webpackChunkTheCatAPI_React_App||[]).push([[772],{772:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var r=a(791),n=a(763),o=a(965),s=a(184);const i="fetching",l="loaded",c="error",d=(0,n.debounce)(((e,t)=>{e(i),(0,o.T)(t).then((()=>e("fetched"))).catch((()=>e(c)))}),500),u=(0,r.memo)((()=>{const[e,t]=(0,r.useState)(null),[a,n]=(0,r.useState)(i);return(0,r.useEffect)((()=>{d(n,t)}),[]),(0,s.jsxs)("div",{className:"random",children:[(0,s.jsx)("div",{children:(0,s.jsx)("button",{className:"btn btn-info",onClick:()=>d(n,t),style:{marginTop:"1rem"},children:"Get Random Cat!"})}),(0,s.jsxs)("div",{children:[a===i&&(0,s.jsx)("div",{className:"spinner-border text-warning",style:{width:"5rem",height:"5rem",margin:"60px auto"},role:"status",children:(0,s.jsx)("span",{className:"visually-hidden",children:"Loading..."})}),a===c&&(0,s.jsx)("p",{style:{color:"red",margin:"60px auto"},children:"Failed to load cat image. Try again!"}),a!==i&&a!==c&&e&&(0,s.jsx)("img",{onLoad:()=>n(l),onError:()=>n(c),style:{display:a===l?"inline":"none"},src:e,alt:"Random Cat"})]})]})}))},965:(e,t,a)=>{a.d(t,{T:()=>i,c:()=>l});const r={breeds:{data:null,timestamp:0}},n="https://api.thecatapi.com/v1",o="live_IuJyxbEXobhzEFpKv1qHbEx7KaXq8yQbUhtaXgbEiJMmOXq7EvZ4BhOLTNgjC5mX",s=async function(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e4;const r=new AbortController,n=setTimeout((()=>r.abort()),a),o=await fetch(e,{...t,signal:r.signal});return clearTimeout(n),o},i=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;const a=`${n}/images/search?timestamp=${Date.now()}`;for(let n=0;n<t;n++)try{var r;const t=await s(a,{headers:{"Content-Type":"application/json","x-api-key":o}},1e4);if(!t.ok)throw new Error(`HTTP error ${t.status}`);const n=await t.json();if(null===(r=n[0])||void 0===r||!r.url)throw new Error("No image URL in response");return e(n[0].url),!0}catch(i){if(n===t-1)throw console.error("Failed to fetch random cat after retries:",i.message),i;await new Promise((e=>setTimeout(e,1e3*(n+1))))}},l=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;const a=`${n}/breeds`,i=Date.now();if(r.breeds.data&&i-r.breeds.timestamp<864e5)return e(r.breeds.data.filter((e=>{var t;return null!=(null===(t=e.image)||void 0===t?void 0:t.url)}))),!0;for(let n=0;n<t;n++)try{const t=await s(a,{headers:{"Content-Type":"application/json","x-api-key":o}},1e4);if(!t.ok)throw new Error(`HTTP error ${t.status}`);const n=await t.json();return r.breeds.data=n,r.breeds.timestamp=i,e(n.filter((e=>{var t;return null!=(null===(t=e.image)||void 0===t?void 0:t.url)}))),!0}catch(l){if(n===t-1)throw console.error("Failed to fetch cat breeds after retries:",l.message),l;await new Promise((e=>setTimeout(e,1e3*(n+1))))}}}}]);
//# sourceMappingURL=772.f109ddb4.chunk.js.map